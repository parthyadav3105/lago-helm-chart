apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: lago-storage-data
  name: lago-storage-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: front
  name: front
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
      nodePort: {{ .Values.frontService.nodePort }}
  type: NodePort
  selector:
    component: lago
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: api
  name: api
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
      nodePort: {{ .Values.apiService.nodePort }}
  type: NodePort
  selector:
    component: lago
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: lago
  name: lago
spec:
  replicas: {{ .Values.replicas.lago }}
  selector:
    matchLabels:
      component: lago
  template:
    metadata:
      labels:
        component: lago
    spec:
      containers:
        - name: lago-front
          image: getlago/front:v0.46.1-beta
          env:
            - name: API_URL
              value: http://{{ .Values.hostname }}:{{ .Values.apiService.nodePort }}
            - name: APP_ENV
              value: production
            - name: CODEGEN_API
              value: http://{{ .Values.hostname }}:{{ .Values.apiService.nodePort }}
            - name: LAGO_DISABLE_SIGNUP
              value: "false"
            - name: LAGO_OAUTH_PROXY_URL
              value: https://proxy.getlago.com
            - name: SENTRY_DSN
          ports:
            - containerPort: 80
              name: front

        - name: lago-worker
          image: getlago/api:v0.46.1-beta
          args:
            - ./scripts/start.worker.sh
          env:
            - name: DATABASE_URL
              value: postgresql://lago:changeme@db:5432/lago
            - name: ENCRYPTION_DETERMINISTIC_KEY
              value: your-encrpytion-deterministic-key
            - name: ENCRYPTION_KEY_DERIVATION_SALT
              value: your-encrpytion-derivation-salt
            - name: ENCRYPTION_PRIMARY_KEY
              value: your-encrpytion-primary-key
            - name: LAGO_API_URL
              value: http://{{ .Values.hostname }}:{{ .Values.apiService.nodePort }}
            - name: LAGO_AWS_S3_ACCESS_KEY_ID
              value: azerty123456
            - name: LAGO_AWS_S3_BUCKET
              value: bucket
            - name: LAGO_AWS_S3_ENDPOINT
            - name: LAGO_AWS_S3_REGION
              value: us-east-1
            - name: LAGO_AWS_S3_SECRET_ACCESS_KEY
              value: azerty123456
            - name: LAGO_DISABLE_SEGMENT
            - name: LAGO_FRONT_URL
              value: http://{{ .Values.hostname }}:{{ .Values.frontService.nodePort }}
            - name: LAGO_GCS_BUCKET
            - name: LAGO_GCS_PROJECT
            - name: LAGO_PDF_URL
              value: http://pdf:3000
            - name: LAGO_REDIS_CACHE_PASSWORD
            - name: LAGO_REDIS_CACHE_URL
              value: redis://redis:6379
            - name: LAGO_RSA_PRIVATE_KEY
              value: {{ .Values.rsaPrivateKey }}
            - name: LAGO_USE_AWS_S3
              value: "false"
            - name: LAGO_USE_GCS
              value: "false"
            - name: RAILS_ENV
              value: production
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: REDIS_PASSWORD
            - name: REDIS_URL
              value: redis://redis:6379
            - name: RSA_PRIVATE_KEY
            - name: SECRET_KEY_BASE
              value: your-secret-key-base-hex-64
            - name: SENTRY_DSN
          volumeMounts:
            - mountPath: /app/storage
              name: lago-storage-data

        - name: lago-api
          image: getlago/api:v0.46.1-beta
          args:
            - ./scripts/start.sh
          env:
            - name: DATABASE_URL
              value: postgresql://lago:changeme@db:5432/lago
            - name: ENCRYPTION_DETERMINISTIC_KEY
              value: your-encrpytion-deterministic-key
            - name: ENCRYPTION_KEY_DERIVATION_SALT
              value: your-encrpytion-derivation-salt
            - name: ENCRYPTION_PRIMARY_KEY
              value: your-encrpytion-primary-key
            - name: LAGO_API_URL
              value: http://{{ .Values.hostname }}:{{ .Values.apiService.nodePort }}
            - name: LAGO_AWS_S3_ACCESS_KEY_ID
              value: azerty123456
            - name: LAGO_AWS_S3_BUCKET
              value: bucket
            - name: LAGO_AWS_S3_ENDP30010OINT
            - name: LAGO_AWS_S3_REGION
              value: us-east-1
            - name: LAGO_AWS_S3_SECRET_ACCESS_KEY
              value: azerty123456
            - name: LAGO_DISABLE_SEGMENT
            - name: LAGO_FRONT_URL
              value: http://{{ .Values.hostname }}:{{ .Values.frontService.nodePort }}
            - name: LAGO_GCS_BUCKET
            - name: LAGO_GCS_PROJECT
            - name: LAGO_LICENSE
            - name: LAGO_OAUTH_PROXY_URL
              value: https://proxy.getlago.com
            - name: LAGO_PDF_URL
              value: http://pdf:3000
            - name: LAGO_REDIS_CACHE_PASSWORD
            - name: LAGO_REDIS_CACHE_URL
              value: redis://redis:6379
            - name: LAGO_RSA_PRIVATE_KEY
              value: {{ .Values.rsaPrivateKey }}
            - name: LAGO_SIDEKIQ_WEB
            - name: LAGO_USE_AWS_S3
              value: "false"
            - name: LAGO_USE_GCS
              value: "false"
            - name: RAILS_ENV
              value: production
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: REDIS_PASSWORD
            - name: REDIS_URL
              value: redis://redis:6379
            - name: RSA_PRIVATE_KEY
            - name: SECRET_KEY_BASE
              value: your-secret-key-base-hex-64
            - name: SENTRY_DSN
          ports:
            - containerPort: 3000
              name: api
          volumeMounts:
            - mountPath: /app/storage
              name: lago-storage-data

        - name: lago-clock
          image: getlago/api:v0.46.1-beta
          args:
            - ./scripts/start.clock.sh
          env:
            - name: DATABASE_URL
              value: postgresql://lago:changeme@db:5432/lago
            - name: ENCRYPTION_DETERMINISTIC_KEY
              value: your-encrpytion-deterministic-key
            - name: ENCRYPTION_KEY_DERIVATION_SALT
              value: your-encrpytion-derivation-salt
            - name: ENCRYPTION_PRIMARY_KEY
              value: your-encrpytion-primary-key
            - name: LAGO_API_URL
              value: http://{{ .Values.hostname }}:{{ .Values.apiService.nodePort }}
            - name: LAGO_RSA_PRIVATE_KEY
              value: {{ .Values.rsaPrivateKey }}
            - name: RAILS_ENV
              value: production
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: REDIS_PASSWORD
            - name: REDIS_URL
              value: redis://redis:6379
            - name: RSA_PRIVATE_KEY
            - name: SECRET_KEY_BASE
              value: your-secret-key-base-hex-64
            - name: SENTRY_DSN

      restartPolicy: Always
      volumes:
        - name: lago-storage-data
          persistentVolumeClaim:
            claimName: lago-storage-data
